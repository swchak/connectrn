{"ast":null,"code":"import _objectSpread from \"/Users/swethachakravarthy/Projects/connectrn/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/swethachakravarthy/Projects/connectrn/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/swethachakravarthy/Projects/connectrn/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/swethachakravarthy/Projects/connectrn/client/src/components/ShiftsListControl.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport LinearIndeterminate from \"./LinearIndeterminate\";\nvar columns = [{\n  id: \"name\",\n  label: \"Shift\",\n  minWidth: 100\n}, {\n  id: \"start\",\n  label: \"Start Date\",\n  minWidth: 170\n}, {\n  id: \"end\",\n  label: \"End Date\",\n  minWidth: 170\n}, {\n  id: \"qual_required\",\n  label: \"Qualification Required\",\n  minWidth: 170\n}, {\n  id: \"nurse\",\n  label: \"Nurse Assigned\",\n  minWidth: 170\n}];\nexport default function ShiftsListControl() {\n  var _this = this;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    page = _React$useState2[0],\n    setPage = _React$useState2[1];\n  var _React$useState3 = React.useState(10),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    rowsPerPage = _React$useState4[0],\n    setRowsPerPage = _React$useState4[1];\n  var _React$useState5 = React.useState([]),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    shiftList = _React$useState6[0],\n    setShiftList = _React$useState6[1];\n  var _React$useState7 = React.useState([]),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    nurseList = _React$useState8[0],\n    setNurseList = _React$useState8[1];\n  var _React$useState9 = React.useState([]),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    tableData = _React$useState10[0],\n    setTableData = _React$useState10[1];\n  var _React$useState11 = React.useState(true),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    loading = _React$useState12[0],\n    setLoading = _React$useState12[1];\n  React.useEffect(function () {\n    var fetchNurses = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:9001/nurses\");\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n              case 5:\n                data = _context.sent;\n                setNurseList(data);\n                setLoading(false);\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function fetchNurses() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    setLoading(true);\n    fetchNurses();\n  }, []);\n  React.useEffect(function () {\n    var fetchShifts = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"http://localhost:9001/shifts\");\n              case 2:\n                res = _context2.sent;\n                _context2.next = 5;\n                return res.json();\n              case 5:\n                data = _context2.sent;\n                setShiftList(data);\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return function fetchShifts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchShifts();\n    console.log(shiftList);\n    setTableData(shiftList.map(function (shift) {\n      var nurse = nurseList.find(function (nurse) {\n        return nurse.id === shift.nurse_id;\n      });\n      return _objectSpread({}, shift, {\n        \"nurse\": \"\".concat(nurse.first_name, \"  \").concat(nurse.last_name)\n      });\n    }));\n  }, []);\n\n  // React.useEffect(() => {\n  //   fetchNurses();\n  // }, []);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return !loading ? /*#__PURE__*/React.createElement(LinearIndeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      width: \"100%\",\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    sx: {\n      maxHeight: 440\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, columns.map(function (column) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, column.label);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, tableData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (shift) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: shift.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, columns.map(function (column) {\n      var value = shift[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: shiftList.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","LinearIndeterminate","columns","id","label","minWidth","ShiftsListControl","useState","page","setPage","rowsPerPage","setRowsPerPage","shiftList","setShiftList","nurseList","setNurseList","tableData","setTableData","loading","setLoading","useEffect","fetchNurses","fetch","res","json","data","fetchShifts","console","log","map","shift","nurse","find","nurse_id","first_name","last_name","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","width","overflow","maxHeight","column","align","slice","format","length"],"sources":["/Users/swethachakravarthy/Projects/connectrn/client/src/components/ShiftsListControl.js"],"sourcesContent":["import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport LinearIndeterminate from \"./LinearIndeterminate\";\n\nconst columns = [\n  { id: \"name\", label: \"Shift\", minWidth: 100 },\n  { id: \"start\", label: \"Start Date\", minWidth: 170 },\n  {\n    id: \"end\",\n    label: \"End Date\",\n    minWidth: 170,\n  },\n  {\n    id: \"qual_required\",\n    label: \"Qualification Required\",\n    minWidth: 170,\n  },\n  {\n    id: \"nurse\",\n    label: \"Nurse Assigned\",\n    minWidth: 170,\n  },\n];\n\nexport default function ShiftsListControl() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [shiftList, setShiftList] = React.useState([]);\n  const [nurseList, setNurseList] = React.useState([]);\n  const [tableData, setTableData] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const fetchNurses = async () => {\n      const res = await fetch(\"http://localhost:9001/nurses\");\n      const data = await res.json();\n      setNurseList(data);\n      setLoading(false);\n    };\n    setLoading(true);\n    fetchNurses();\n  }, [])\n  React.useEffect(()=> {\n     const fetchShifts = async () => {\n         const res = await fetch(\"http://localhost:9001/shifts\")\n         const data = await res.json();\n        setShiftList(data);\n  }\n  fetchShifts();\n    console.log(shiftList)\n    setTableData(\n      shiftList.map((shift) => {\n        const nurse = nurseList.find((nurse) => nurse.id === shift.nurse_id);\n        return {\n          ...shift,\n          \"nurse\": `${nurse.first_name}  ${nurse.last_name}`,\n        };\n      })\n    );\n  }, []);\n\n    // React.useEffect(() => {\n    //   fetchNurses();\n    // }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    (!loading ? (<LinearIndeterminate></LinearIndeterminate>) :\n    (<Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableData\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((shift) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={shift.id}>\n                    {columns.map((column) => {\n                      const value = shift[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={shiftList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>))\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}