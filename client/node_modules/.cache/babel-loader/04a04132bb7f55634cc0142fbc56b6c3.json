{"ast":null,"code":"import _asyncToGenerator from \"/Users/swethachakravarthy/Projects/connectrn/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/swethachakravarthy/Projects/connectrn/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/swethachakravarthy/Projects/connectrn/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/swethachakravarthy/Projects/connectrn/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/swethachakravarthy/Projects/connectrn/client/src/components/ShiftsListControl.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nvar columns = [{\n  id: \"name\",\n  label: \"Shift\",\n  minWidth: 100\n}, {\n  id: \"start\",\n  label: \"Start Date\",\n  minWidth: 170\n}, {\n  id: \"end\",\n  label: \"End Date\",\n  minWidth: 170\n}, {\n  id: \"qual_required\",\n  label: \"Qualification Required\",\n  minWidth: 170\n}, {\n  id: \"nurse\",\n  label: \"Nurse Assigned\",\n  minWidth: 170\n}];\nexport default function ShiftsListControl() {\n  var _this = this;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    page = _React$useState2[0],\n    setPage = _React$useState2[1];\n  var _React$useState3 = React.useState(10),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    rowsPerPage = _React$useState4[0],\n    setRowsPerPage = _React$useState4[1];\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    shiftsByNurse = _useState2[0],\n    setShiftsByNurse = _useState2[1];\n  React.useEffect(function () {\n    fetchShiftsByNurse();\n  }, []);\n  var combineUsingNurseIdField = function combineUsingNurseIdField(shifts, nurses) {\n    var keyByNurseIdField = function keyByNurseIdField(previousValue, currentValue) {\n      return _objectSpread({}, previousValue, _defineProperty({}, currentValue.id, currentValue));\n    };\n    var nursesByNurseId = nurses.reduce(keyByNurseIdField, {});\n    var shiftsByNurse = shifts.map(function (shift) {\n      return {\n        name: shift.name,\n        start: shift.start,\n        end: shift.end,\n        qual_required: shift.qual_required,\n        nurse: \"\".concat(nursesByNurseId[shift.nurse_id].first_name, \" \").concat(nursesByNurseId[shift.nurse_id].last_name)\n      };\n    });\n    return shiftsByNurse;\n  };\n  var fetchShiftsByNurse = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var fetchShifts, fetchNurses, _yield$Promise$all, _yield$Promise$all2, _shifts, _nurses;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              fetchShifts = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return fetch(\"http://localhost:9001/shifts\");\n                        case 2:\n                          return _context.abrupt(\"return\", _context.sent);\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return function fetchShifts() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n              fetchNurses = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return fetch(\"http://localhost:9001/nurses\");\n                        case 2:\n                          return _context2.abrupt(\"return\", _context2.sent);\n                        case 3:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n                return function fetchNurses() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n              _context3.prev = 2;\n              _context3.next = 5;\n              return Promise.all([fetchNurses, fetchShifts]);\n            case 5:\n              _yield$Promise$all = _context3.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              _shifts = _yield$Promise$all2[0];\n              _nurses = _yield$Promise$all2[1];\n              _this.setShiftsByNurse(combineUsingNurseIdField(_shifts, _nurses));\n              _context3.next = 14;\n              break;\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](2);\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 12]]);\n    }));\n    return function fetchShiftsByNurse() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      width: \"100%\",\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    sx: {\n      maxHeight: 440\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, columns.map(function (column) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, column.label);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, shiftsByNurse.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (shift) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: shift.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, columns.map(function (column) {\n      var value = shift[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: shiftsList.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","ShiftsListControl","page","setPage","rowsPerPage","setRowsPerPage","shiftsByNurse","setShiftsByNurse","useEffect","fetchShiftsByNurse","combineUsingNurseIdField","shifts","nurses","keyByNurseIdField","previousValue","currentValue","nursesByNurseId","reduce","map","shift","name","start","end","qual_required","nurse","nurse_id","first_name","last_name","fetchShifts","fetch","fetchNurses","Promise","all","_shifts","_nurses","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","width","overflow","maxHeight","column","align","slice","format","shiftsList","length"],"sources":["/Users/swethachakravarthy/Projects/connectrn/client/src/components/ShiftsListControl.js"],"sourcesContent":["import * as React from \"react\";\nimport {useState} from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\n\nconst columns = [\n  { id: \"name\", label: \"Shift\", minWidth: 100 },\n  { id: \"start\", label: \"Start Date\", minWidth: 170 },\n  {\n    id: \"end\",\n    label: \"End Date\",\n    minWidth: 170,\n  },\n  {\n    id: \"qual_required\",\n    label: \"Qualification Required\",\n    minWidth: 170,\n  },\n  {\n    id: \"nurse\",\n    label: \"Nurse Assigned\",\n    minWidth: 170,\n  },\n];\n\nexport default function ShiftsListControl() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [shiftsByNurse, setShiftsByNurse] = useState([]);\n\n  React.useEffect(()=> {\n    fetchShiftsByNurse();\n  }, []);\n\n  const combineUsingNurseIdField = (shifts, nurses) => {\n    const keyByNurseIdField = (previousValue, currentValue) => ({\n      ...previousValue,\n      [currentValue.id]: currentValue,\n    });\n    const nursesByNurseId = nurses.reduce(keyByNurseIdField, {});\n\n    const shiftsByNurse = shifts.map((shift) => ({\n      name: shift.name,\n      start: shift.start,\n      end: shift.end,\n      qual_required: shift.qual_required,\n      nurse: `${nursesByNurseId[shift.nurse_id].first_name} ${nursesByNurseId[shift.nurse_id].last_name}`,\n    }));\n    return shiftsByNurse;\n  };\n\n  const fetchShiftsByNurse = async () => {\n    const fetchShifts = async () => {\n      return await fetch(\"http://localhost:9001/shifts\");\n    };\n    const fetchNurses = async () => {\n      return await fetch(\"http://localhost:9001/nurses\");\n    };\n\n    try {\n      const [_shifts, _nurses] = await Promise.all([fetchNurses, fetchShifts]);\n      this.setShiftsByNurse(combineUsingNurseIdField(_shifts, _nurses));\n    } catch (err) {}\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {shiftsByNurse\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((shift) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={shift.id}>\n                    {columns.map((column) => {\n                      const value = shift[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={shiftsList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}