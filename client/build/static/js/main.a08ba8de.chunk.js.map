{"version":3,"sources":["logo.svg","components/ShiftsListingPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","StyledTableCell","styled","TableCell","_ref","_ref2","theme","Object","defineProperty","concat","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","_ref3","&:nth-of-type(odd)","action","hover","&:last-child td, &:last-child th","border","createData","name","calories","fat","carbs","protein","rows","ShiftsListingPage","react","TableContainer","component","Paper","Table","sx","minWidth","aria-label","TableHead","align","TableBody","map","row","key","scope","App","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_default","a","createElement","StrictMode","src_App"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sOCWlCC,EAAkBC,YAAOC,IAAPD,CAAkB,SAAAE,GAAA,IAAAC,EAAGC,EAAKF,EAALE,MAAK,OAAAD,EAAA,GAAAE,OAAAC,EAAA,EAAAD,CAAAF,EAAA,KAAAI,OAC1CC,IAAiBC,MAAS,CAC9BC,gBAAiBN,EAAMO,QAAQC,OAAOC,MACtCC,MAAOV,EAAMO,QAAQC,OAAOG,QAC7BV,OAAAC,EAAA,EAAAD,CAAAF,EAAA,KAAAI,OACKC,IAAiBQ,MAAS,CAC9BC,SAAU,KACXd,IAGGe,EAAiBlB,YAAOmB,IAAPnB,CAAiB,SAAAoB,GAAQ,MAAQ,CACtDC,qBAAsB,CACpBX,gBAF4CU,EAALhB,MAEhBO,QAAQW,OAAOC,OAGxCC,mCAAoC,CAClCC,OAAQ,MAIZ,SAASC,EAAWC,EAAMC,EAAUC,EAAKC,EAAOC,GAC9C,MAAO,CAAEJ,OAAMC,WAAUC,MAAKC,QAAOC,WAGvC,IAAMC,EAAO,CACXN,EAAW,iBAAkB,IAAK,EAAK,GAAI,GAC3CA,EAAW,qBAAsB,IAAK,EAAK,GAAI,KAC/CA,EAAW,SAAU,IAAK,GAAM,GAAI,GACpCA,EAAW,UAAW,IAAK,IAAK,GAAI,KACpCA,EAAW,cAAe,IAAK,GAAM,GAAI,MAG5B,SAASO,IACtB,OACEC,EAAA,cAACC,EAAA,EAAc,CAACC,UAAWC,KACzBH,EAAA,cAACI,EAAA,EAAK,CAACC,GAAI,CAAEC,SAAU,KAAOC,aAAW,oBACvCP,EAAA,cAACQ,EAAA,EAAS,KACRR,EAAA,cAACf,EAAA,EAAQ,KACPe,EAAA,cAACnC,EAAe,+BAChBmC,EAAA,cAACnC,EAAe,CAAC4C,MAAM,SAAO,YAC9BT,EAAA,cAACnC,EAAe,CAAC4C,MAAM,SAAO,cAC9BT,EAAA,cAACnC,EAAe,CAAC4C,MAAM,SAAO,gBAC9BT,EAAA,cAACnC,EAAe,CAAC4C,MAAM,SAAO,oBAGlCT,EAAA,cAACU,EAAA,EAAS,KACPZ,EAAKa,IAAI,SAACC,GAAG,OACZZ,EAAA,cAAChB,EAAc,CAAC6B,IAAKD,EAAInB,MACvBO,EAAA,cAACnC,EAAe,CAACqC,UAAU,KAAKY,MAAM,OACnCF,EAAInB,MAEPO,EAAA,cAACnC,EAAe,CAAC4C,MAAM,SAASG,EAAIlB,UACpCM,EAAA,cAACnC,EAAe,CAAC4C,MAAM,SAASG,EAAIjB,KACpCK,EAAA,cAACnC,EAAe,CAAC4C,MAAM,SAASG,EAAIhB,OACpCI,EAAA,cAACnC,EAAe,CAAC4C,MAAM,SAASG,EAAIf,eCrDnCkB,MANf,WACE,OACEf,EAAA,cAACD,EAAiB,OCIPiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCvD,EAAAwD,EAAA,GAAAC,KAAAzD,EAAA0D,KAAA,UAAqBD,KAAK,SAAApD,GAAiD,IAA9CsD,EAAMtD,EAANsD,OAAQC,EAAMvD,EAANuD,OAAQC,EAAMxD,EAANwD,OAAQC,EAAMzD,EAANyD,OAAQC,EAAO1D,EAAP0D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,WAAU,KACfH,EAAAC,EAAAC,cAACE,EAAG,QAORpB","file":"static/js/main.a08ba8de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","\nimport * as React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function ShiftsListingPage() {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport './components/ShiftsListingPage';\nimport * as React from \"react\";\nimport ShiftsListingPage from './components/ShiftsListingPage';\n\nfunction App() {\n  return (\n    <ShiftsListingPage></ShiftsListingPage>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}